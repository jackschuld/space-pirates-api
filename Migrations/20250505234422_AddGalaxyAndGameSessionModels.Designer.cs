// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpacePirates.API.Data;

#nullable disable

namespace SpacePirates.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250505234422_AddGalaxyAndGameSessionModels")]
    partial class AddGalaxyAndGameSessionModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SpacePirates.API.Models.Galaxy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Galaxies");
                });

            modelBuilder.Entity("SpacePirates.API.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GalaxyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastPlayed")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GalaxyId");

                    b.HasIndex("ShipId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlanetType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SolarSystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolarSystemId");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("SpacePirates.API.Models.PlanetResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountAvailable")
                        .HasColumnType("int");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.HasIndex("ResourceId");

                    b.ToTable("PlanetResources");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<double>("X")
                        .HasColumnType("double");

                    b.Property<double>("Y")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("WeightPerUnit")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CaptainName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<bool>("IsInCombat")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastDocked")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.CargoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CargoSystemId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CargoSystemId");

                    b.HasIndex("ResourceId");

                    b.ToTable("CargoItems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.CargoSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLoad")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpgraded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("CargoSystems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpgraded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.FuelSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("CurrentFuel")
                        .HasColumnType("double");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpgraded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("FuelSystems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.Hull", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentIntegrity")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpgraded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("Hulls");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.Shield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Charging")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CurrentIntegrity")
                        .HasColumnType("int");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastRechargeTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpgraded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("Shields");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.WeaponSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpgraded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("int");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId")
                        .IsUnique();

                    b.ToTable("WeaponSystems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.SolarSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GalaxyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SunType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("X")
                        .HasColumnType("double");

                    b.Property<double>("Y")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("GalaxyId");

                    b.ToTable("SolarSystems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.GameSession", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Galaxy", "Galaxy")
                        .WithMany()
                        .HasForeignKey("GalaxyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Galaxy");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Planet", b =>
                {
                    b.HasOne("SpacePirates.API.Models.SolarSystem", "SolarSystem")
                        .WithMany("Planets")
                        .HasForeignKey("SolarSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolarSystem");
                });

            modelBuilder.Entity("SpacePirates.API.Models.PlanetResource", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Planet", "Planet")
                        .WithMany("Resources")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacePirates.API.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Position", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("Position")
                        .HasForeignKey("SpacePirates.API.Models.Position", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.CargoItem", b =>
                {
                    b.HasOne("SpacePirates.API.Models.ShipComponents.CargoSystem", "CargoSystem")
                        .WithMany("CargoItems")
                        .HasForeignKey("CargoSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpacePirates.API.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoSystem");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.CargoSystem", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("CargoSystem")
                        .HasForeignKey("SpacePirates.API.Models.ShipComponents.CargoSystem", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.Engine", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("Engine")
                        .HasForeignKey("SpacePirates.API.Models.ShipComponents.Engine", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.FuelSystem", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("FuelSystem")
                        .HasForeignKey("SpacePirates.API.Models.ShipComponents.FuelSystem", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.Hull", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("Hull")
                        .HasForeignKey("SpacePirates.API.Models.ShipComponents.Hull", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.Shield", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("Shield")
                        .HasForeignKey("SpacePirates.API.Models.ShipComponents.Shield", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.WeaponSystem", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Ship", "Ship")
                        .WithOne("WeaponSystem")
                        .HasForeignKey("SpacePirates.API.Models.ShipComponents.WeaponSystem", "ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("SpacePirates.API.Models.SolarSystem", b =>
                {
                    b.HasOne("SpacePirates.API.Models.Galaxy", "Galaxy")
                        .WithMany("SolarSystems")
                        .HasForeignKey("GalaxyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Galaxy");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Galaxy", b =>
                {
                    b.Navigation("SolarSystems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Planet", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("SpacePirates.API.Models.Ship", b =>
                {
                    b.Navigation("CargoSystem")
                        .IsRequired();

                    b.Navigation("Engine")
                        .IsRequired();

                    b.Navigation("FuelSystem")
                        .IsRequired();

                    b.Navigation("Hull")
                        .IsRequired();

                    b.Navigation("Position")
                        .IsRequired();

                    b.Navigation("Shield")
                        .IsRequired();

                    b.Navigation("WeaponSystem")
                        .IsRequired();
                });

            modelBuilder.Entity("SpacePirates.API.Models.ShipComponents.CargoSystem", b =>
                {
                    b.Navigation("CargoItems");
                });

            modelBuilder.Entity("SpacePirates.API.Models.SolarSystem", b =>
                {
                    b.Navigation("Planets");
                });
#pragma warning restore 612, 618
        }
    }
}
